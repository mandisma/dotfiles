#!/usr/bin/env bash

DOTFILES_DIRECTORY=$(cd "$(dirname "$0")" && pwd)
PACKAGE_MANAGER=$1

# Install zsh
if ! type "zsh" > /dev/null; then
    echo 'Install zsh'
    echo '-----------------'
    sudo $PACKAGE_MANAGER install zsh -y
    chsh -s "$(which zsh)"
fi

sudo $PACKAGE_MANAGER install curl wget -y

echo 'Install oh-my-zsh'
echo '-----------------'
rm -rf "$HOME/.oh-my-zsh"
curl -L https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh | sh

echo 'Install zsh-syntax-highlighting'
echo '-----------------'
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git "$DOTFILES_DIRECTORY/misc/oh-my-zsh-custom/plugins/zsh-syntax-highlighting"

echo 'Install zsh-autosuggestions'
echo '-----------------'
git clone https://github.com/zsh-users/zsh-autosuggestions "$DOTFILES_DIRECTORY/misc/oh-my-zsh-custom/plugins/zsh-autosuggestions"

echo 'Install powerlevel10k'
echo '-----------------'
git clone --depth=1 https://github.com/romkatv/powerlevel10k.git "$DOTFILES_DIRECTORY/misc/oh-my-zsh-custom/themes/powerlevel10k"

echo 'Install fzf'
echo '-----------------'
sudo $PACKAGE_MANAGER install fzf -y

# Add global gitignore
rm "$HOME/.global-gitignore"
ln -s "$DOTFILES_DIRECTORY/shell/.global-gitignore" "$HOME/.global-gitignore"

echo 'Install gitconfig'
echo '-----------------'

# Add gitconfig
if ! [ -f "$HOME/.gitconfig" ]; then

    read -p " - What is your github author name? " git_authorname
    read -p " - What is your github author email? " git_authoremail

    sed -e "s/AUTHORNAME/$git_authorname/g" \
        -e "s/AUTHOREMAIL/$git_authoremail/g" \
        -e "s+DOTFILES_DIRECTORY+$DOTFILES_DIRECTORY+g" \
        "$DOTFILES_DIRECTORY/shell/.gitconfig.example" > "$HOME/.gitconfig"
else
    echo " - .gitconfig already exists."
fi

# Symlink p10k conf
rm "$HOME/.p10k.zsh"
ln -s "$DOTFILES_DIRECTORY/shell/.p10k.zsh" "$HOME/.p10k.zsh"
$HOME/.p10k.zsh

# Symlink zsh prefs
rm "$HOME/.zshrc"
ln -s "$DOTFILES_DIRECTORY/shell/.zshrc" "$HOME/.zshrc"
$HOME/.zshrc

# Neovim
sudo $PACKAGE_MANAGER install neovim -y
mkdir -p "$HOME/.config"
ln -s "$DOTFILES_DIRECTORY/shell/nvim" "$HOME/.config/nvim"

# Install nvim plugin
curl -fLo "$HOME/.config/nvim/autoload/plug.vim" --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
nvim +PlugInstall +qall

# Install zip
echo 'Install zip'
echo '-------------'
sudo $PACKAGE_MANAGER install zip -y

# Install nvm
read -p "Do you wish to install nvm ? [Yn] " -n 1 -r yn

if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo 'Install nvm'
    echo '-------------'
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh | bash
    nvm install stable
fi

echo

# Install php
read -p "Do you wish to install php ? [Yn] " -n 1 -r yn

if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo 'Install PHP'
    echo '----------------'
    sudo $PACKAGE_MANAGER install php php-xdebug php-memcached php-xml php-mbstring php-curl -y

    # PhpBrew
    echo 'Install PhpBrew'
    echo '----------------'

    if ["$PACKAGE_MANAGER" = "apt"]; then
        sudo $PACKAGE_MANAGER install \
            build-essential \
            libbz2-dev \
            libreadline-dev \
            libsqlite3-dev \
            libcurl4-gnutls-dev \
            libzip-dev \
            libssl-dev \
            libxml2-dev \
            libxslt1-dev \
            pkg-config \
            libonig-dev -y \
            php-dev
    elif ["$PACKAGE_MANAGER" = "dnf"]; then
        sudo $PACKAGE_MANAGER install \
            make gcc gcc-c++ kernel-devel \
            php-json php-bz2 php-devel php-pear \
            bzip2-devel yum-utils libmcrypt-devel libpq-devel libxslt-devel pcre-devel \
            libcurl-devel libgsasl-devel openldap-devel \
            libzip-devel readline-devel \
            oniguruma-devel
    fi

    curl -L -O https://github.com/phpbrew/phpbrew/raw/master/phpbrew
    chmod +x phpbrew
    sudo mv phpbrew "$HOME/.local/bin/phpbrew"
    phpbrew init

    echo 'Install composer'
    echo '----------------'
    EXPECTED_COMPOSER_CHECKSUM="$(curl https://composer.github.io/installer.sig)"
    php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    ACTUAL_COMPOSER_CHECKSUM="$(php -r "echo hash_file('sha384', 'composer-setup.php');")"
    if [ "$EXPECTED_COMPOSER_CHECKSUM" != "$ACTUAL_COMPOSER_CHECKSUM" ]
    then
        >&2 echo 'ERROR: Invalid installer checksum'
        rm composer-setup.php
        exit 1
    fi
    sudo php composer-setup.php --install-dir=/usr/local/bin --filename=composer
    rm composer-setup.php
fi

echo 'Install git-flow'
echo '----------------'
sudo $PACKAGE_MANAGER install git-flow -y

echo 'Install diff-so-fancy'
echo '----------------'
git clone https://github.com/so-fancy/diff-so-fancy $DOTFILES_DIRECTORY/misc/diffsofancy
chmod +x $DOTFILES_DIRECTORY/misc/diffsofancy/diff-so-fancy
sudo ln -s $DOTFILES_DIRECTORY/misc/diffsofancy/diff-so-fancy /usr/local/bin/diff-so-fancy

echo 'Install Python / pip'
echo '----------------'
sudo $PACKAGE_MANAGER install python3 python3-venv python3-pip -y


echo 'Install tldr'
echo '----------------'
pip3 install tldr

echo 'Install bat'
echo '----------------'
sudo $PACKAGE_MANAGER install bat

echo '++++++++++++++++++++++++++++++'
echo '++++++++++++++++++++++++++++++'
echo 'All done!'